apiVersion: v1
kind: ServiceAccount

metadata:
  name: hybrid-scheduler
  namespace: kube-system
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hybrid-scheduler
  namespace: kube-system
subjects:
- kind: ServiceAccount
  name: hybrid-scheduler
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: hybrid-scheduler
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: hybrid-scheduler
  namespace: kube-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hybrid-scheduler-newversion
  namespace: kube-system
  labels:
   name: hybrid-scheduler-newversion
data:
  config.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1beta2
    kind: KubeSchedulerConfiguration
    leaderElection:
      leaderElect: false
    profiles:
    - schedulerName: hybrid-scheduler
    extenders:
    - urlPrefix: "https://hybrid-scheduler.kube-system.svc:443"
      filterVerb: filter
      bindVerb: bind
      nodeCacheCapable: true
      weight: 1
      httpTimeout: 30s
      enableHTTPS: true
      tlsConfig:
        insecure: true
      managedResources:
      - name: keti.hybrid/schedule
        ignoredByScheduler: true
  config.json: |
    {
        "kind": "Policy",
        "apiVersion": "v1",
        "extenders": [
            {
                "urlPrefix": "https://127.0.0.1:443",
                "filterVerb": "filter",
                "bindVerb": "bind",
                "enableHttps": true,
                "weight": 1,
                "nodeCacheCapable": true,
                "httpTimeout": 30000000000,
                "tlsConfig": {
                    "insecure": true
                },
                "ignoreable": false
            }
        ]
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hybrid-scheduler
  namespace: kube-system
  labels:
    name: hybrid-scheduler
data:
  config.json: |
    {
        "kind": "Policy",
        "apiVersion": "v1",
        "extenders": [
            {
                "urlPrefix": "https://127.0.0.1:443",
                "filterVerb": "filter",
                "bindVerb": "bind",
                "enableHttps": true,
                "weight": 1,
                "nodeCacheCapable": true,
                "httpTimeout": 30000000000,
                "tlsConfig": {
                    "insecure": true
                },
                "ignoreable": false
            }
        ]
    }
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: hybrid-scheduler
  namespace: kube-system
  labels:
    name: hybrid-scheduler
---
apiVersion: v1
kind: Service
metadata:
  name: hybrid-scheduler
  namespace: kube-system
  labels:
    name: hybrid-scheduler
spec:
  type: NodePort
  ports:
  - port: 443
    targetPort: 443
    nodePort: 31998
    protocol: TCP
  selector:
    name: hybrid-scheduler
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hybrid-scheduler
  namespace: kube-system
  labels:
    name: hybrid-scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hybrid-scheduler
  template:
    metadata:
      labels:
        name: hybrid-scheduler
        keti.hybrid/webhook: ignore
    spec:
      nodeName: hcp-master
      imagePullSecrets: 
      - name: ketidevit2
      serviceAccountName: hybrid-scheduler
      priorityClassName: system-node-critical
      containers:
        - name: kube-scheduler
          image: registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler:v1.17.17
          imagePullPolicy: IfNotPresent
          command:
          - kube-scheduler
          #- --config=/config/config.yaml
          - --policy-config-file=/config/config.json
          - --leader-elect=false
          - --scheduler-name=hybrid-scheduler
          # - --kubeconfig=/etc/kubernetes/scheduler.conf
          # - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
          # - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
          - -v=4       
          volumeMounts:
          - name: scheduler-config
            mountPath: /config
          # - mountPath: /etc/kubernetes/scheduler.conf
          #   name: kubeconfig
          #   readOnly: true
        - name: hybrid-scheduler
          image: ketidevit2/hybrid.hybrid-scheduler:latest
          imagePullPolicy: Always
          command:
          - /usr/local/bin/hybrid.hybrid-scheduler
          - --http_bind=0.0.0.0:443
          - --cert_file=/tls/tls.crt
          - --key_file=/tls/tls.key
          - --scheduler-name=hybrid-scheduler
          - --debug
          - -v=5
          ports:
            - name: http
              containerPort: 443
              protocol: TCP
          volumeMounts:
            - name: tls-config
              mountPath: /tls
      volumes:
      - name: tls-config
        secret:
          secretName: hybrid-scheduler-tls
      - name: scheduler-config
        configMap:
          name: hybrid-scheduler-newversion
      # - name: scheduler-config
      #   configMap:
      #     name: hybrid-scheduler
      # - hostPath:
      #     path: /etc/kubernetes/scheduler.conf
      #     type: FileOrCreate
      #     name: kubeconfig



